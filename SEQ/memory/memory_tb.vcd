$date
	Sun Feb 19 18:41:26 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module memory_tb $end
$var wire 64 ! valM [63:0] $end
$var wire 64 " memory_address [63:0] $end
$var wire 1 # dmem_error $end
$var wire 64 $ datamem [63:0] $end
$var reg 1 % clk $end
$var reg 4 & icode [3:0] $end
$var reg 64 ' valA [63:0] $end
$var reg 64 ( valE [63:0] $end
$var reg 64 ) valP [63:0] $end
$scope module uut $end
$var wire 1 % clk $end
$var wire 4 * icode [3:0] $end
$var wire 64 + valA [63:0] $end
$var wire 64 , valE [63:0] $end
$var wire 64 - valP [63:0] $end
$var reg 64 . datamem [63:0] $end
$var reg 1 # dmem_error $end
$var reg 64 / memory_address [63:0] $end
$var reg 64 0 valM [63:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 0
b0 /
bx .
b0 -
b0 ,
b0 +
b0 *
b0 )
b0 (
b0 '
b0 &
0%
bx $
0#
b0 "
b0 !
$end
#10
b0 $
b0 .
b100 &
b100 *
1%
#20
0%
#30
b10 "
b10 /
b11 )
b11 -
b10 (
b10 ,
b1010 &
b1010 *
1%
#40
0%
#50
b101 $
b101 .
b0 "
b0 /
b101 )
b101 -
b0 (
b0 ,
b10 '
b10 +
b1000 &
b1000 *
1%
#60
0%
#70
b101 !
b101 0
b101 "
b101 /
b100 )
b100 -
b101 (
b101 ,
b0 '
b0 +
b101 &
b101 *
1%
#80
0%
#90
b110 $
b110 .
b11 )
b11 -
b110 (
b110 ,
b101 '
b101 +
b1011 &
b1011 *
1%
#100
0%
#110
b1 $
b1 .
b100 !
b100 0
b100 "
b100 /
b111 )
b111 -
b1 (
b1 ,
b100 '
b100 +
b1001 &
b1001 *
1%
#120
0%
