$date
	Sun Feb 19 18:31:45 2023
$end
$version
	Icarus Verilog
$end
$timescale
	10ps
$end
$scope module decode_tb $end
$var wire 64 ! valB [63:0] $end
$var wire 64 " valA [63:0] $end
$var reg 1 # clk $end
$var reg 4 $ icode [3:0] $end
$var reg 4 % rA [3:0] $end
$var reg 4 & rB [3:0] $end
$scope module UUT $end
$var wire 1 # clk $end
$var wire 4 ' icode [3:0] $end
$var wire 4 ( rA [3:0] $end
$var wire 4 ) rB [3:0] $end
$var reg 64 * valA [63:0] $end
$var reg 64 + valB [63:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 +
b0 *
b0 )
b0 (
b0 '
b0 &
b0 %
b0 $
0#
b0 "
b0 !
$end
#1000
b1 "
b1 *
b10 $
b10 '
1#
#2000
0#
#3000
1#
b10 &
b10 )
b1 %
b1 (
b11 $
b11 '
#4000
0#
#5000
b1 !
b1 +
1#
b100 &
b100 )
b11 %
b11 (
b100 $
b100 '
#6000
0#
#7000
1#
b1010 &
b1010 )
b100 %
b100 (
b101 $
b101 '
#8000
0#
#9000
1#
b101 &
b101 )
b1011 %
b1011 (
b110 $
b110 '
#10000
0#
#11000
1#
b111 &
b111 )
b110 %
b110 (
b111 $
b111 '
#12000
0#
#13000
1#
b1000 $
b1000 '
#14000
0#
#15000
1#
b1000 &
b1000 )
b111 %
b111 (
b1001 $
b1001 '
#16000
0#
#17000
1#
b1010 &
b1010 )
b1001 %
b1001 (
b1010 $
b1010 '
#18000
0#
#19000
1#
b1 &
b1 )
b0 %
b0 (
b1011 $
b1011 '
#20000
0#
